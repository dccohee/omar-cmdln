buildscript {
    if(System.env.OMAR_COMMON_PROPERTIES)
    {
      apply from: System.env.OMAR_COMMON_PROPERTIES
    }
    repositories {
      maven { url "${ossimMavenProxy}" }
      mavenLocal()
      maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}

plugins {
  id "com.github.ben-manes.versions" version "0.17.0"
}

version "0.1"
group "omar.cmdln.app"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-core"
apply plugin: "maven-publish"
apply plugin: "maven"

repositories {
    maven { url "${ossimMavenProxy}" }
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

grails {
  plugins {
      compile project(':omar-core-plugin')
      compile project(':omar-raster-plugin')
      compile project(':omar-video-plugin')
      compile project(':omar-stager-plugin')
      compile project(':omar-hibernate-spatial-plugin')
  }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.grails:grails-plugin-services"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails:grails-validation:3.3.2"
    runtime "com.h2database:h2"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    console "org.grails:grails-console"
    profile "org.grails.profiles:base"
    testCompile "org.grails:grails-gorm-testing-support"
}

bootRun {
  jvmArgs('-Dspring.output.ansi.enabled=always')
  addResources = true
  String springProfilesActive = 'spring.profiles.active'
  systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
